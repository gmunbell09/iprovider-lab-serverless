AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "descripcion del stack"

Parameters:
  ProjectName:
    Description: ""
    Type: String
  SourceFunctionBucket:
    Description: "Bucket where the lambda code is found"
    Type: String
  SourceFunctionKey:
    Description: "Key where the lambda code is found"
    Type: String
  CognitoUserGroup:
    Description: "Cognito user Pool"
    Type: String

Resources:
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref ProjectName
      FailOnWarnings: true

  ApiGatewayResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref ApiGateway
      ParentId: !GetAtt [ApiGateway, RootResourceId]
      PathPart: "lml"

  ApiGatewayProxyMethod:
    Type: "AWS::ApiGateway::Method"
    Properties:
      AuthorizationType: NONE
      HttpMethod: ANY
      Integration:
        IntegrationHttpMethod: POST
        Type: "AWS"
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGateway

  ApiGatewayDeployment:
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: iprovider
    DependsOn: 
      - ApiGatewayProxyMethod

  ApiGatewayAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: !Ref ProjectName
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.authorization
      ProviderARNs:
        - !Ref CognitoUserGroup
      RestApiId: !Ref ApiGateway

  LambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join [ "", [ 'arn:aws:execute-api:', !Ref 'AWS::Region', ":", !Ref 'AWS::AccountId', ":", !Ref 'ApiGateway', "/*/*/*", ] ]

  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: serverless-apirest::serverless_apirest.LambdaEntryPoint::FunctionHandlerAsync
      Runtime: dotnetcore3.1
      MemorySize: 256
      Timeout: 30
      CodeUri:
        Bucket: !Ref SourceFunctionBucket
        Key: !Ref SourceFunctionKey
      Policies: AWSLambda_FullAccess
Outputs:
  RootUrl:
    Description: "Url principal del servicio iprovider"
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/iprovider/


